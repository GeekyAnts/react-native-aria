diff --git a/node_modules/@storybook/react-native/dist/preview/components/OnDeviceUI/index.js b/node_modules/@storybook/react-native/dist/preview/components/OnDeviceUI/index.js
index bb73f6a..c94d1b2 100644
--- a/node_modules/@storybook/react-native/dist/preview/components/OnDeviceUI/index.js
+++ b/node_modules/@storybook/react-native/dist/preview/components/OnDeviceUI/index.js
@@ -99,8 +99,7 @@ var OnDeviceUI = /** @class */ (function (_super) {
             animation_1.getPreviewPosition(this.animatedValue, previewWidth, previewHeight, slideBetweenAnimation),
         ];
         var previewStyles = [flex, animation_1.getPreviewScale(this.animatedValue, slideBetweenAnimation)];
-        return (react_1.default.createElement(react_native_1.SafeAreaView, { style: flex },
-            react_1.default.createElement(react_native_1.KeyboardAvoidingView, { enabled: !shouldDisableKeyboardAvoidingView || tabOpen !== constants_1.PREVIEW, behavior: IS_IOS ? 'padding' : null, keyboardVerticalOffset: keyboardAvoidingViewVerticalOffset, style: flex },
+        return (react_1.default.createElement(react_native_1.KeyboardAvoidingView, { enabled: !shouldDisableKeyboardAvoidingView || tabOpen !== constants_1.PREVIEW, behavior: IS_IOS ? 'padding' : null, keyboardVerticalOffset: keyboardAvoidingViewVerticalOffset, style: flex },
                 react_1.default.createElement(absolute_positioned_keyboard_aware_view_1.default, { onLayout: this.onLayout, previewHeight: previewHeight, previewWidth: previewWidth },
                     react_1.default.createElement(react_native_1.Animated.View, { style: previewWrapperStyles },
                         react_1.default.createElement(react_native_1.Animated.View, { style: previewStyles },
@@ -111,7 +110,7 @@ var OnDeviceUI = /** @class */ (function (_super) {
                         react_1.default.createElement(StoryListView_1.default, { stories: stories })),
                     react_1.default.createElement(panel_1.default, { style: animation_1.getAddonPanelPosition(this.animatedValue, previewWidth) },
                         react_1.default.createElement(addons_2.default, null))),
-                react_1.default.createElement(navigation_1.default, { tabOpen: tabOpen, onChangeTab: this.handleToggleTab, initialUiVisible: !isUIHidden }))));
+                react_1.default.createElement(navigation_1.default, { tabOpen: tabOpen, onChangeTab: this.handleToggleTab, initialUiVisible: !isUIHidden })));
     };
     return OnDeviceUI;
 }(react_1.PureComponent));
